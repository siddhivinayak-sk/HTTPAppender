log4j.category.fr.bettinger.log4j.sample.HttpAppenderSample = DEBUG, AppenderHttp
log4j.category.fr.bettinger.log4j.sample.HttpAppenderSampleUnHandled = DEBUG, AppenderUnHandled
log4j.appender.AppenderHttp=fr.bettinger.log4j.HttpAppender
log4j.appender.AppenderHttp.LogURL=http://where.to.send/path

# method is GET or POST
# default method is get
log4j.appender.AppenderHttp.method=GET

# if you use post method, you can choose to send
# parameters in query string (QUERY_STRING), or in request parameters (PARAMETERS)
# default mode is PARAMETERS
#log4j.appender.AppenderStat.post=QUERY_STRING

# you can specifie http timeout value
log4j.appender.AppenderHttp.timeout=500

# you can use a separate thread to send http notification
# this can be helpfull in case of http server spend to
# much time to answer..
# default value is true
log4j.appender.AppenderHttp.thread=true

# HttpAppender needs an HttpLayout
log4j.appender.AppenderHttp.layout = fr.bettinger.log4j.HttpLayout

# This pattern needs to be a proper HTTP query string. Each value
# of the query is produced by an EnhancedPatternLayout including MDC and NDC.
log4j.appender.AppenderHttp.layout.conversionPattern = ?param=%X{id}&usr=%X{uid}&evt=%m

# You can skip urlEncoding for parameters, but it defaults to true.
log4j.appender.AppenderHttp.layout.urlEncode = TRUE
# Charset for URLEncoding.
log4j.appender.AppenderHttp.layout.encoding = UTF-8

## see what's happening inside the appender
log4j.configDebug = TRACE, A1
log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n